mixin storeForm(store  = {})
    //- p It works! #{store.name}
    form(action=`/add/${store._id || ''}` method="POST" class="card")
        label(for="name") Name
        input(type="text" name = "name" value=store.name)
        label(for="description") Description
        textarea(name="description")= store.description
        //- address, lng and lat
        label(for="address") Address
        input(type="text" id="address" name="location[address]" value=(store.location && store.location.address))
        //- in app.js, app.use(bodyParser.urlencoded({ extended: true })); allows us to access nested data. square brackets to access property
        //- && to make sure store.location exists before trying to access it
        label(for="lng") Address Lng
        input(type="text" id="lng" name="location[coordinates][0]" value=(store.location && store.location.coordinates[0]) required)
        //- location[coordinates][0] because coordinates is an array and also lng comes first in mongoDB
        label(for="lat") Address Lat
        input(type="text" id="lat" name="location[coordinates][1]" value=(store.location && store.location.coordinates[1]) required)
        - const choices = ['Wifi', 'Open Late', 'Family Friendly', 'Vegetarian', 'Licensed']
        - const tags = store.tags || []
        ul.tags
            each choice in choices
                .tag.tag__choice
                    input(type="checkbox" id=choice value=choice name="tags" checked=(tags.includes(choice)))
                    label(for=choice) #{choice}
        input(type="submit" value = "Save " class = "button")